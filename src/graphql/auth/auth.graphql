extend type Mutation {
  
  signin(signinReq: SigninReq!): AuthStatus
  
  signup(signupReq: SignupReq!): AuthStatus

  changePassword(changePasswordReq: ChangePasswordReq): ChangePasswordRes
  
  forgotPassword(forgotPasswordReq: ForgotPasswordReq): ForgotPasswordRes

  resetPassword(resetPasswordReq: ResetPasswordReq): ResetPasswordRes
}

input SigninReq {
  username: String!
  password: String!
}

input SignupReq {
  firstname: String!
  lastname: String!
  email: String!
  username: String!
  password: String!
  confirmPassword: String!
  membershipId: Int!
  accountId: Int!
}

input ChangePasswordReq {
  password: String!
  newPassword: String!
  confirmPassword: String!
}

input ForgotPasswordReq {
  email: String!
}

input ResetPasswordReq {
  newPassword: String!
  confirmPassword: String!
  resetToken: String!
}

type AuthStatus {
  scs: Boolean!
  token: String
  msg: String
}

type ChangePasswordRes implements MutationRes {
  scs: Boolean!
  msg: String!
}

type ForgotPasswordRes implements MutationRes {
  scs: Boolean!
  msg: String!
}

type ResetPasswordRes implements MutationRes {
  scs: Boolean!
  msg: String!
}